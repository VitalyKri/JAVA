1) Массив нельзя изменять, только копировать
Массив быстрее коллекции (бинарник)

!!!!Коллекция представляет собой контейнер, который хранит в себе множество элементов,
и позволяющий работать с этой группой элементов как с одним объектом.
Коллекции используются для хранения, получения, обработки множества объектов.

●	Collection - является “корневым” элементом иерархии коллекций.
    Коллекция представляет собой группу объектов, называемых элементами.
    Интерфейс описывает функционал присущий абсолютно всем коллекциям.
●	Set - коллекция, представляющая собой множество элементов, которое не может содержать дубликаты.
●	List - коллекция, содержащая в себе последовательность элементов.
    В этом типе коллекций дубликаты разрешены.
    List позволяет обращаться к своим элементам по индексу, добавлять/изменять/удалять элементы.
●	Queue - коллекция, позволяющая управлять процессом обработки элементов.
    Как правило, работает в режиме FIFO (first-in, first-out, первый вошел - первый вышел, например, очередь в кабинет).
    В таком случае элементы добавляются в хвост, а забираются с головы.
●	Deque - коллекция, позволяющая управлять процессом обработки элементов.
    Deque может использоваться как в режиме FIFO , так и в режиме LIFO (last-in, first-out, последний вошел - первый вышел,
    например, в стопку бумаг кладут сверху листы, и оттуда же их забирают).
    Deque позволяет добавлять/изменять/удалять элементы как в голове, так и в хвосте коллекции.
●	Map, коллекция которая отображает ключ, к его значению. Map не может содержать дублирующиеся ключи.
    Map не наследуется от интерфейса Collection.
●	SortedSet и SortedMap представляют собой упорядоченные в порядке возрастания версии коллекций
    Set (сортировка идет по элементам) и Map (сортировка производится по ключам).


2)ArrayList работает только ссылками обертка над массивом
ArrayList<> (10000);
массив капасити сколько выделено, size сколько содержит
    a)размер (size) и емкость (capacity). size указывает на то,
    сколько объектов уже хранится в нем, а capacity - на сколько объектов рассчитана данная коллекция

    б)При удаление элементы смещаются вперед
    Для этого используется
    Итератор использует
    -	ArrayList представляет собой динамический массив(список) в Java;
    -	Получение значения по индексу ячейки осуществляется с помощью метода E get(int index);
    -	Для добавления элемента в ArrayList используем метод add(E e);
    -	Метод set(int index, E e) позволяет заменить значение ячейки по ее индексу;
    -	Чтобы удалить элемент по индексу или значению, используем метод remove(int index) или remove(E e);
    -	При удалении не последнего элемента ArrayList, все элементы, идущие после удаляемого, будут смещены на 1 позицию влево.

LinkedList
    Структура LinkedList значительно отличается от ArrayList.
    Каждый элемент в связном списке имеет ссылку на предыдущий и на следующий элементы.
    Сам же LinkedList имеет ссылку на свой первый и последний элемент.
    Важно! В отличие от ArrayList, LinkedList не использует массивов в своей внутренней структуре.
Поиск по обходу (а не сразу обращение к элементу) LIFO и FIFO


HashМap (ключ хеш сумма, и значение) соответствие
порядок по ключам
типы ключа и значения могут отличаться.
Для того, чтобы понять, что такое ключ, и что такое значение,
а также почему HashMap позволяет производить быстрый поиск значения по ключу,
необходимо немного углубиться в структуру и логику работы HashMap.
!! во время коллизии создает list list
Для использование ссылок в виде ключа, нужно переопределение иквуев и hashcode

HashSet
только значение (без дубликата) данные записываются в виде хештаблицы
из хешкода значение получить нельзя. Колизици нет