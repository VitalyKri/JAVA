1)Создание формы
public class MyWindow extends JFrame {
   public MyWindow() {
       setTitle("Test Window");
       setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
       setBounds(300, 300, 400, 400);
       JButton button1 = new JButton("Simple Button #1");
       JButton button2 = new JButton("Simple Button #2");
       add(button1, BorderLayout.NORTH);
       add(button2, BorderLayout.SOUTH);
       setVisible(true);
   }

   public static void main(String[] args) {
       new MyWindow();
   }
}

2) Обработка событий
    а)Кнопка
        JButton button = new JButton("Нажми сюда!");
        add(button, BorderLayout.CENTER);
        // Это событие
       // важно button.addActionListener(new ActionListener() {
           @Override
           public void actionPerformed(ActionEvent actionEvent) {
               button.setText("Нажал!");
           }
        });
    б)Текстовое поле
        JTextField textField = new JTextField();
               add(textField, BorderLayout.CENTER);
               textField.addActionListener(new ActionListener() {
                   @Override
                   public void actionPerformed(ActionEvent actionEvent) {
                       System.out.println(textField.getText());
                   }
               });
    в) события формы
        addWindowListener(new WindowAdapter() {
                  @Override
                  public void windowClosing(WindowEvent e) {
                     System.out.println("Окно закрывается");
                  }
               });
3) Компоновщики элементов
    а)BorderLayout - компоновщик элеметов по сторонам света.
    б)BoxLayout - Располагает элементы в строку или столбец в зависимости
        ●	BoxLayout.Y_AXIS - в столбец,
        ●	BoxLayout.X_AXIS - в строку
        setLayout(new BoxLayout(getContentPane(), BoxLayout.X_AXIS));
           for (int i = 1; i <= 10; i++) {
               add(new JButton("#" + i));
           }
        При создании BoxLayout в конструктор необходимо передать ссылку на контейенр,
        в котором он будет работать.
        Для получения у формы ссылки на внутренний контейнер используется метод getContentPane().
    в)FlowLayout
        Располагает элементы в одну строку, когда ширины строки становится недостаточно, переносит новые элементы на следующую.
        setLayout(new FlowLayout());
               for (int i = 1; i <= 10; i++) {
                   add(new JButton("#" + i));
               }

    г) GridLayout
       Элементы управления раскладываются по ячейкам таблицы, для которой задано количество строки и столбцов.
        Высота строк и ширина столбцов зависит от их количества и размеров формы, то есть вручную задать значения этих свойств нельзя.
        setLayout(new GridLayout(3, 3));
               for (int i = 0; i < 9; i++) {
                   add(new JButton(String.valueOf(i + 1)));
               }

4)Отключение компоновщика элементов
    Возможен сценарий ручной расстановки элементов путем указания их абсолютных координат.
    Для этого необходимо указать setLayout(null) и для каждого элемента указать его координаты и размеры с помощью метода setBounds().
    setLayout(null);
           JTextField field = new JTextField();
           field.setBounds(20, 20, 120, 32);
           add(field);
           JButton button = new JButton("Нажми сюда");
           button.setBounds(20, 60, 120, 32);
           add(button);

5) базовые классы. Прочитать.
    ●	JFrame – окно приложения;
    ●	JButton – кнопка;
    ●	JLabel – надпись;
    ●	JTextField – однострочное текстовое поле;
    ●	JTextArea – многострочное текстовое поле;
    ●	JScrollPane – контейнер для пролистывания контента;
    ●	JMenuBar – верхнее меню программы;
    ●	JTable – таблица;
    ●	JRadioButton – RadioButton;
    ●	JCheckBox – CheckBox.


